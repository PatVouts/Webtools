//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DLLPricingReports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EvaporatorDATA")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EvaporatorDATA : global::System.Data.DataSet {
        
        private EvaporatorsDataTable tableEvaporators;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EvaporatorDATA() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected EvaporatorDATA(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Evaporators"] != null)) {
                    base.Tables.Add(new EvaporatorsDataTable(ds.Tables["Evaporators"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EvaporatorsDataTable Evaporators {
            get {
                return this.tableEvaporators;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            EvaporatorDATA cln = ((EvaporatorDATA)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Evaporators"] != null)) {
                    base.Tables.Add(new EvaporatorsDataTable(ds.Tables["Evaporators"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEvaporators = ((EvaporatorsDataTable)(base.Tables["Evaporators"]));
            if ((initTable == true)) {
                if ((this.tableEvaporators != null)) {
                    this.tableEvaporators.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "EvaporatorDATA";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEvaporators = new EvaporatorsDataTable();
            base.Tables.Add(this.tableEvaporators);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEvaporators() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EvaporatorDATA ds = new EvaporatorDATA();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EvaporatorsRowChangeEventHandler(object sender, EvaporatorsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EvaporatorsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnQuoteID;
            
            private global::System.Data.DataColumn columnQuoteRevision;
            
            private global::System.Data.DataColumn columnQuoteRevisionText;
            
            private global::System.Data.DataColumn columnItemType;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnAttachToCondensingUnit;
            
            private global::System.Data.DataColumn columnCondensingUnitItemID;
            
            private global::System.Data.DataColumn columnCondensingUnitSystemName;
            
            private global::System.Data.DataColumn columnTag;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnSuctionTemperature;
            
            private global::System.Data.DataColumn columnLiquidTemperature;
            
            private global::System.Data.DataColumn columnRefrigerantText;
            
            private global::System.Data.DataColumn columnDefrostText;
            
            private global::System.Data.DataColumn columnVoltageText;
            
            private global::System.Data.DataColumn columnFPIText;
            
            private global::System.Data.DataColumn columnTemperatureRangeMin;
            
            private global::System.Data.DataColumn columnTemperatureRangeMax;
            
            private global::System.Data.DataColumn columnRequiredCapacity;
            
            private global::System.Data.DataColumn columnSelectionTypeText;
            
            private global::System.Data.DataColumn columnModelText;
            
            private global::System.Data.DataColumn columnCoilCoatingText;
            
            private global::System.Data.DataColumn columnCoilCoatingPrice;
            
            private global::System.Data.DataColumn columnFinMaterialText;
            
            private global::System.Data.DataColumn columnFinMaterialPrice;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnRefrigerantChargeMultiplier;
            
            private global::System.Data.DataColumn columnMotorMCA;
            
            private global::System.Data.DataColumn columnMotorMOP;
            
            private global::System.Data.DataColumn columnMotorFUSE;
            
            private global::System.Data.DataColumn columnHeaterFLA;
            
            private global::System.Data.DataColumn columnHeaterMCA;
            
            private global::System.Data.DataColumn columnHeaterFUSE;
            
            private global::System.Data.DataColumn columnDimensionDrawing;
            
            private global::System.Data.DataColumn columnElectricalDrawing;
            
            private global::System.Data.DataColumn columnEvaporatorID;
            
            private global::System.Data.DataColumn columnCapacityAt10TD;
            
            private global::System.Data.DataColumn columnDefrostType;
            
            private global::System.Data.DataColumn columnEvaporatorCapacity;
            
            private global::System.Data.DataColumn columnEvaporatorWeight;
            
            private global::System.Data.DataColumn columnEvaporatorCoilQty;
            
            private global::System.Data.DataColumn columnEvaporatorFanQty;
            
            private global::System.Data.DataColumn columnEvaporatorHeaterQTY;
            
            private global::System.Data.DataColumn columnEvaporatorCFM;
            
            private global::System.Data.DataColumn columnEvaporatorRefCharge;
            
            private global::System.Data.DataColumn columnEvaporatorPrice;
            
            private global::System.Data.DataColumn columnLowVelocity;
            
            private global::System.Data.DataColumn columnLiquid;
            
            private global::System.Data.DataColumn columnSuction;
            
            private global::System.Data.DataColumn columnHotGas;
            
            private global::System.Data.DataColumn columnConnQty;
            
            private global::System.Data.DataColumn columnFanArrangement;
            
            private global::System.Data.DataColumn columnSSucTemp;
            
            private global::System.Data.DataColumn columnFSucTemp;
            
            private global::System.Data.DataColumn columnEvaporatorType;
            
            private global::System.Data.DataColumn columnCoilType;
            
            private global::System.Data.DataColumn columnCoilTubes;
            
            private global::System.Data.DataColumn columnCoilRow;
            
            private global::System.Data.DataColumn columnCoilFPI;
            
            private global::System.Data.DataColumn columnCoilLength;
            
            private global::System.Data.DataColumn columnCoilModel;
            
            private global::System.Data.DataColumn columnEvaporatorTypeDesc;
            
            private global::System.Data.DataColumn columnEvaporatorStyleDesc;
            
            private global::System.Data.DataColumn columnDefrostTypeID;
            
            private global::System.Data.DataColumn columnDefrostTypeDescription;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnVoltageID;
            
            private global::System.Data.DataColumn columnStandardFPI;
            
            private global::System.Data.DataColumn columnCurrentFPI;
            
            private global::System.Data.DataColumn columnFPIMultiplier;
            
            private global::System.Data.DataColumn columnVoltDescription;
            
            private global::System.Data.DataColumn columnVoltsValue;
            
            private global::System.Data.DataColumn columnPhaseNumber;
            
            private global::System.Data.DataColumn columnHzValue;
            
            private global::System.Data.DataColumn columnWattMultiplier;
            
            private global::System.Data.DataColumn columnHeaterFLAMultiplier;
            
            private global::System.Data.DataColumn columnPowerFactorAdjustement;
            
            private global::System.Data.DataColumn columnMotorCoilArr;
            
            private global::System.Data.DataColumn columnPowerSupply;
            
            private global::System.Data.DataColumn columnCapacityMultiplier;
            
            private global::System.Data.DataColumn columnMotor;
            
            private global::System.Data.DataColumn columnMotorHP;
            
            private global::System.Data.DataColumn columnMotorRPM;
            
            private global::System.Data.DataColumn columnMotorRotType;
            
            private global::System.Data.DataColumn columnMotorFrameType;
            
            private global::System.Data.DataColumn columnMotorShaftLength;
            
            private global::System.Data.DataColumn columnMotorPrice;
            
            private global::System.Data.DataColumn columnMotorFLA;
            
            private global::System.Data.DataColumn columnMotorMount;
            
            private global::System.Data.DataColumn columnMotorMountFanSize;
            
            private global::System.Data.DataColumn columnMotorMountFrameSize;
            
            private global::System.Data.DataColumn columnMotorMountComposition;
            
            private global::System.Data.DataColumn columnMotorMountPrice;
            
            private global::System.Data.DataColumn columnFan;
            
            private global::System.Data.DataColumn columnFanDiameter;
            
            private global::System.Data.DataColumn columnFanBladeQuantity;
            
            private global::System.Data.DataColumn columnFanRotationType;
            
            private global::System.Data.DataColumn columnFanComposition;
            
            private global::System.Data.DataColumn columnFanPitch;
            
            private global::System.Data.DataColumn columnFanPrice;
            
            private global::System.Data.DataColumn columnFanGuard;
            
            private global::System.Data.DataColumn columnFanGuardFanSize;
            
            private global::System.Data.DataColumn columnFanGuardComposition;
            
            private global::System.Data.DataColumn columnDefrostHeater;
            
            private global::System.Data.DataColumn columnDefrostHeaterType;
            
            private global::System.Data.DataColumn columnDefrostHeaterVolt;
            
            private global::System.Data.DataColumn columnDefrostHeaterWatt;
            
            private global::System.Data.DataColumn columnDefrostHeaterDesc;
            
            private global::System.Data.DataColumn columnDefrostHeaterPrice;
            
            private global::System.Data.DataColumn columnDefrostHeaterKilowatts;
            
            private global::System.Data.DataColumn columnCapacityMultiplied;
            
            private global::System.Data.DataColumn columnTD_FOR_CAPACITY;
            
            private global::System.Data.DataColumn columnCAPACITY_FOR_TD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsDataTable() {
                this.TableName = "Evaporators";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EvaporatorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EvaporatorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuoteIDColumn {
                get {
                    return this.columnQuoteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuoteRevisionColumn {
                get {
                    return this.columnQuoteRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuoteRevisionTextColumn {
                get {
                    return this.columnQuoteRevisionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemTypeColumn {
                get {
                    return this.columnItemType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachToCondensingUnitColumn {
                get {
                    return this.columnAttachToCondensingUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondensingUnitItemIDColumn {
                get {
                    return this.columnCondensingUnitItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondensingUnitSystemNameColumn {
                get {
                    return this.columnCondensingUnitSystemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TagColumn {
                get {
                    return this.columnTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuctionTemperatureColumn {
                get {
                    return this.columnSuctionTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LiquidTemperatureColumn {
                get {
                    return this.columnLiquidTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefrigerantTextColumn {
                get {
                    return this.columnRefrigerantText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostTextColumn {
                get {
                    return this.columnDefrostText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltageTextColumn {
                get {
                    return this.columnVoltageText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FPITextColumn {
                get {
                    return this.columnFPIText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureRangeMinColumn {
                get {
                    return this.columnTemperatureRangeMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureRangeMaxColumn {
                get {
                    return this.columnTemperatureRangeMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredCapacityColumn {
                get {
                    return this.columnRequiredCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SelectionTypeTextColumn {
                get {
                    return this.columnSelectionTypeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelTextColumn {
                get {
                    return this.columnModelText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilCoatingTextColumn {
                get {
                    return this.columnCoilCoatingText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilCoatingPriceColumn {
                get {
                    return this.columnCoilCoatingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinMaterialTextColumn {
                get {
                    return this.columnFinMaterialText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinMaterialPriceColumn {
                get {
                    return this.columnFinMaterialPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefrigerantChargeMultiplierColumn {
                get {
                    return this.columnRefrigerantChargeMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMCAColumn {
                get {
                    return this.columnMotorMCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMOPColumn {
                get {
                    return this.columnMotorMOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorFUSEColumn {
                get {
                    return this.columnMotorFUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeaterFLAColumn {
                get {
                    return this.columnHeaterFLA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeaterMCAColumn {
                get {
                    return this.columnHeaterMCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeaterFUSEColumn {
                get {
                    return this.columnHeaterFUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DimensionDrawingColumn {
                get {
                    return this.columnDimensionDrawing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElectricalDrawingColumn {
                get {
                    return this.columnElectricalDrawing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorIDColumn {
                get {
                    return this.columnEvaporatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CapacityAt10TDColumn {
                get {
                    return this.columnCapacityAt10TD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostTypeColumn {
                get {
                    return this.columnDefrostType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorCapacityColumn {
                get {
                    return this.columnEvaporatorCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorWeightColumn {
                get {
                    return this.columnEvaporatorWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorCoilQtyColumn {
                get {
                    return this.columnEvaporatorCoilQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorFanQtyColumn {
                get {
                    return this.columnEvaporatorFanQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorHeaterQTYColumn {
                get {
                    return this.columnEvaporatorHeaterQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorCFMColumn {
                get {
                    return this.columnEvaporatorCFM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorRefChargeColumn {
                get {
                    return this.columnEvaporatorRefCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorPriceColumn {
                get {
                    return this.columnEvaporatorPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LowVelocityColumn {
                get {
                    return this.columnLowVelocity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LiquidColumn {
                get {
                    return this.columnLiquid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuctionColumn {
                get {
                    return this.columnSuction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HotGasColumn {
                get {
                    return this.columnHotGas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConnQtyColumn {
                get {
                    return this.columnConnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanArrangementColumn {
                get {
                    return this.columnFanArrangement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSucTempColumn {
                get {
                    return this.columnSSucTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSucTempColumn {
                get {
                    return this.columnFSucTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorTypeColumn {
                get {
                    return this.columnEvaporatorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilTypeColumn {
                get {
                    return this.columnCoilType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilTubesColumn {
                get {
                    return this.columnCoilTubes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilRowColumn {
                get {
                    return this.columnCoilRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilFPIColumn {
                get {
                    return this.columnCoilFPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilLengthColumn {
                get {
                    return this.columnCoilLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoilModelColumn {
                get {
                    return this.columnCoilModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorTypeDescColumn {
                get {
                    return this.columnEvaporatorTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EvaporatorStyleDescColumn {
                get {
                    return this.columnEvaporatorStyleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostTypeIDColumn {
                get {
                    return this.columnDefrostTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostTypeDescriptionColumn {
                get {
                    return this.columnDefrostTypeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltageIDColumn {
                get {
                    return this.columnVoltageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StandardFPIColumn {
                get {
                    return this.columnStandardFPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentFPIColumn {
                get {
                    return this.columnCurrentFPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FPIMultiplierColumn {
                get {
                    return this.columnFPIMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltDescriptionColumn {
                get {
                    return this.columnVoltDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltsValueColumn {
                get {
                    return this.columnVoltsValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseNumberColumn {
                get {
                    return this.columnPhaseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HzValueColumn {
                get {
                    return this.columnHzValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WattMultiplierColumn {
                get {
                    return this.columnWattMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeaterFLAMultiplierColumn {
                get {
                    return this.columnHeaterFLAMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorAdjustementColumn {
                get {
                    return this.columnPowerFactorAdjustement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorCoilArrColumn {
                get {
                    return this.columnMotorCoilArr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerSupplyColumn {
                get {
                    return this.columnPowerSupply;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CapacityMultiplierColumn {
                get {
                    return this.columnCapacityMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorColumn {
                get {
                    return this.columnMotor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorHPColumn {
                get {
                    return this.columnMotorHP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorRPMColumn {
                get {
                    return this.columnMotorRPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorRotTypeColumn {
                get {
                    return this.columnMotorRotType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorFrameTypeColumn {
                get {
                    return this.columnMotorFrameType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorShaftLengthColumn {
                get {
                    return this.columnMotorShaftLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorPriceColumn {
                get {
                    return this.columnMotorPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorFLAColumn {
                get {
                    return this.columnMotorFLA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMountColumn {
                get {
                    return this.columnMotorMount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMountFanSizeColumn {
                get {
                    return this.columnMotorMountFanSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMountFrameSizeColumn {
                get {
                    return this.columnMotorMountFrameSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMountCompositionColumn {
                get {
                    return this.columnMotorMountComposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorMountPriceColumn {
                get {
                    return this.columnMotorMountPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanColumn {
                get {
                    return this.columnFan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanDiameterColumn {
                get {
                    return this.columnFanDiameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanBladeQuantityColumn {
                get {
                    return this.columnFanBladeQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanRotationTypeColumn {
                get {
                    return this.columnFanRotationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanCompositionColumn {
                get {
                    return this.columnFanComposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanPitchColumn {
                get {
                    return this.columnFanPitch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanPriceColumn {
                get {
                    return this.columnFanPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanGuardColumn {
                get {
                    return this.columnFanGuard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanGuardFanSizeColumn {
                get {
                    return this.columnFanGuardFanSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FanGuardCompositionColumn {
                get {
                    return this.columnFanGuardComposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterColumn {
                get {
                    return this.columnDefrostHeater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterTypeColumn {
                get {
                    return this.columnDefrostHeaterType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterVoltColumn {
                get {
                    return this.columnDefrostHeaterVolt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterWattColumn {
                get {
                    return this.columnDefrostHeaterWatt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterDescColumn {
                get {
                    return this.columnDefrostHeaterDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterPriceColumn {
                get {
                    return this.columnDefrostHeaterPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefrostHeaterKilowattsColumn {
                get {
                    return this.columnDefrostHeaterKilowatts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CapacityMultipliedColumn {
                get {
                    return this.columnCapacityMultiplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TD_FOR_CAPACITYColumn {
                get {
                    return this.columnTD_FOR_CAPACITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAPACITY_FOR_TDColumn {
                get {
                    return this.columnCAPACITY_FOR_TD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsRow this[int index] {
                get {
                    return ((EvaporatorsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EvaporatorsRowChangeEventHandler EvaporatorsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EvaporatorsRowChangeEventHandler EvaporatorsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EvaporatorsRowChangeEventHandler EvaporatorsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EvaporatorsRowChangeEventHandler EvaporatorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEvaporatorsRow(EvaporatorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsRow AddEvaporatorsRow(
                        int QuoteID, 
                        int QuoteRevision, 
                        string QuoteRevisionText, 
                        int ItemType, 
                        int ItemID, 
                        string Username, 
                        int AttachToCondensingUnit, 
                        int CondensingUnitItemID, 
                        string CondensingUnitSystemName, 
                        string Tag, 
                        int Quantity, 
                        decimal SuctionTemperature, 
                        decimal LiquidTemperature, 
                        string RefrigerantText, 
                        string DefrostText, 
                        string VoltageText, 
                        string FPIText, 
                        decimal TemperatureRangeMin, 
                        decimal TemperatureRangeMax, 
                        decimal RequiredCapacity, 
                        string SelectionTypeText, 
                        string ModelText, 
                        string CoilCoatingText, 
                        decimal CoilCoatingPrice, 
                        string FinMaterialText, 
                        decimal FinMaterialPrice, 
                        string Description, 
                        decimal Price, 
                        decimal RefrigerantChargeMultiplier, 
                        decimal MotorMCA, 
                        decimal MotorMOP, 
                        decimal MotorFUSE, 
                        decimal HeaterFLA, 
                        decimal HeaterMCA, 
                        decimal HeaterFUSE, 
                        string DimensionDrawing, 
                        string ElectricalDrawing, 
                        string EvaporatorID, 
                        decimal CapacityAt10TD, 
                        string DefrostType, 
                        decimal EvaporatorCapacity, 
                        decimal EvaporatorWeight, 
                        decimal EvaporatorCoilQty, 
                        decimal EvaporatorFanQty, 
                        decimal EvaporatorHeaterQTY, 
                        decimal EvaporatorCFM, 
                        decimal EvaporatorRefCharge, 
                        decimal EvaporatorPrice, 
                        int LowVelocity, 
                        decimal Liquid, 
                        decimal Suction, 
                        decimal HotGas, 
                        decimal ConnQty, 
                        decimal FanArrangement, 
                        decimal SSucTemp, 
                        decimal FSucTemp, 
                        string EvaporatorType, 
                        string CoilType, 
                        int CoilTubes, 
                        int CoilRow, 
                        int CoilFPI, 
                        decimal CoilLength, 
                        string CoilModel, 
                        string EvaporatorTypeDesc, 
                        string EvaporatorStyleDesc, 
                        string DefrostTypeID, 
                        string DefrostTypeDescription, 
                        string UnitID, 
                        decimal VoltageID, 
                        decimal StandardFPI, 
                        decimal CurrentFPI, 
                        decimal FPIMultiplier, 
                        string VoltDescription, 
                        decimal VoltsValue, 
                        decimal PhaseNumber, 
                        decimal HzValue, 
                        decimal WattMultiplier, 
                        decimal HeaterFLAMultiplier, 
                        decimal PowerFactorAdjustement, 
                        string MotorCoilArr, 
                        string PowerSupply, 
                        decimal CapacityMultiplier, 
                        string Motor, 
                        decimal MotorHP, 
                        decimal MotorRPM, 
                        string MotorRotType, 
                        string MotorFrameType, 
                        decimal MotorShaftLength, 
                        decimal MotorPrice, 
                        decimal MotorFLA, 
                        string MotorMount, 
                        decimal MotorMountFanSize, 
                        decimal MotorMountFrameSize, 
                        string MotorMountComposition, 
                        decimal MotorMountPrice, 
                        string Fan, 
                        decimal FanDiameter, 
                        int FanBladeQuantity, 
                        string FanRotationType, 
                        string FanComposition, 
                        decimal FanPitch, 
                        decimal FanPrice, 
                        string FanGuard, 
                        decimal FanGuardFanSize, 
                        string FanGuardComposition, 
                        string DefrostHeater, 
                        string DefrostHeaterType, 
                        int DefrostHeaterVolt, 
                        int DefrostHeaterWatt, 
                        string DefrostHeaterDesc, 
                        decimal DefrostHeaterPrice, 
                        decimal DefrostHeaterKilowatts, 
                        decimal CapacityMultiplied, 
                        decimal TD_FOR_CAPACITY, 
                        decimal CAPACITY_FOR_TD) {
                EvaporatorsRow rowEvaporatorsRow = ((EvaporatorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QuoteID,
                        QuoteRevision,
                        QuoteRevisionText,
                        ItemType,
                        ItemID,
                        Username,
                        AttachToCondensingUnit,
                        CondensingUnitItemID,
                        CondensingUnitSystemName,
                        Tag,
                        Quantity,
                        SuctionTemperature,
                        LiquidTemperature,
                        RefrigerantText,
                        DefrostText,
                        VoltageText,
                        FPIText,
                        TemperatureRangeMin,
                        TemperatureRangeMax,
                        RequiredCapacity,
                        SelectionTypeText,
                        ModelText,
                        CoilCoatingText,
                        CoilCoatingPrice,
                        FinMaterialText,
                        FinMaterialPrice,
                        Description,
                        Price,
                        RefrigerantChargeMultiplier,
                        MotorMCA,
                        MotorMOP,
                        MotorFUSE,
                        HeaterFLA,
                        HeaterMCA,
                        HeaterFUSE,
                        DimensionDrawing,
                        ElectricalDrawing,
                        EvaporatorID,
                        CapacityAt10TD,
                        DefrostType,
                        EvaporatorCapacity,
                        EvaporatorWeight,
                        EvaporatorCoilQty,
                        EvaporatorFanQty,
                        EvaporatorHeaterQTY,
                        EvaporatorCFM,
                        EvaporatorRefCharge,
                        EvaporatorPrice,
                        LowVelocity,
                        Liquid,
                        Suction,
                        HotGas,
                        ConnQty,
                        FanArrangement,
                        SSucTemp,
                        FSucTemp,
                        EvaporatorType,
                        CoilType,
                        CoilTubes,
                        CoilRow,
                        CoilFPI,
                        CoilLength,
                        CoilModel,
                        EvaporatorTypeDesc,
                        EvaporatorStyleDesc,
                        DefrostTypeID,
                        DefrostTypeDescription,
                        UnitID,
                        VoltageID,
                        StandardFPI,
                        CurrentFPI,
                        FPIMultiplier,
                        VoltDescription,
                        VoltsValue,
                        PhaseNumber,
                        HzValue,
                        WattMultiplier,
                        HeaterFLAMultiplier,
                        PowerFactorAdjustement,
                        MotorCoilArr,
                        PowerSupply,
                        CapacityMultiplier,
                        Motor,
                        MotorHP,
                        MotorRPM,
                        MotorRotType,
                        MotorFrameType,
                        MotorShaftLength,
                        MotorPrice,
                        MotorFLA,
                        MotorMount,
                        MotorMountFanSize,
                        MotorMountFrameSize,
                        MotorMountComposition,
                        MotorMountPrice,
                        Fan,
                        FanDiameter,
                        FanBladeQuantity,
                        FanRotationType,
                        FanComposition,
                        FanPitch,
                        FanPrice,
                        FanGuard,
                        FanGuardFanSize,
                        FanGuardComposition,
                        DefrostHeater,
                        DefrostHeaterType,
                        DefrostHeaterVolt,
                        DefrostHeaterWatt,
                        DefrostHeaterDesc,
                        DefrostHeaterPrice,
                        DefrostHeaterKilowatts,
                        CapacityMultiplied,
                        TD_FOR_CAPACITY,
                        CAPACITY_FOR_TD};
                rowEvaporatorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEvaporatorsRow);
                return rowEvaporatorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EvaporatorsDataTable cln = ((EvaporatorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EvaporatorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnQuoteID = base.Columns["QuoteID"];
                this.columnQuoteRevision = base.Columns["QuoteRevision"];
                this.columnQuoteRevisionText = base.Columns["QuoteRevisionText"];
                this.columnItemType = base.Columns["ItemType"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnUsername = base.Columns["Username"];
                this.columnAttachToCondensingUnit = base.Columns["AttachToCondensingUnit"];
                this.columnCondensingUnitItemID = base.Columns["CondensingUnitItemID"];
                this.columnCondensingUnitSystemName = base.Columns["CondensingUnitSystemName"];
                this.columnTag = base.Columns["Tag"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnSuctionTemperature = base.Columns["SuctionTemperature"];
                this.columnLiquidTemperature = base.Columns["LiquidTemperature"];
                this.columnRefrigerantText = base.Columns["RefrigerantText"];
                this.columnDefrostText = base.Columns["DefrostText"];
                this.columnVoltageText = base.Columns["VoltageText"];
                this.columnFPIText = base.Columns["FPIText"];
                this.columnTemperatureRangeMin = base.Columns["TemperatureRangeMin"];
                this.columnTemperatureRangeMax = base.Columns["TemperatureRangeMax"];
                this.columnRequiredCapacity = base.Columns["RequiredCapacity"];
                this.columnSelectionTypeText = base.Columns["SelectionTypeText"];
                this.columnModelText = base.Columns["ModelText"];
                this.columnCoilCoatingText = base.Columns["CoilCoatingText"];
                this.columnCoilCoatingPrice = base.Columns["CoilCoatingPrice"];
                this.columnFinMaterialText = base.Columns["FinMaterialText"];
                this.columnFinMaterialPrice = base.Columns["FinMaterialPrice"];
                this.columnDescription = base.Columns["Description"];
                this.columnPrice = base.Columns["Price"];
                this.columnRefrigerantChargeMultiplier = base.Columns["RefrigerantChargeMultiplier"];
                this.columnMotorMCA = base.Columns["MotorMCA"];
                this.columnMotorMOP = base.Columns["MotorMOP"];
                this.columnMotorFUSE = base.Columns["MotorFUSE"];
                this.columnHeaterFLA = base.Columns["HeaterFLA"];
                this.columnHeaterMCA = base.Columns["HeaterMCA"];
                this.columnHeaterFUSE = base.Columns["HeaterFUSE"];
                this.columnDimensionDrawing = base.Columns["DimensionDrawing"];
                this.columnElectricalDrawing = base.Columns["ElectricalDrawing"];
                this.columnEvaporatorID = base.Columns["EvaporatorID"];
                this.columnCapacityAt10TD = base.Columns["CapacityAt10TD"];
                this.columnDefrostType = base.Columns["DefrostType"];
                this.columnEvaporatorCapacity = base.Columns["EvaporatorCapacity"];
                this.columnEvaporatorWeight = base.Columns["EvaporatorWeight"];
                this.columnEvaporatorCoilQty = base.Columns["EvaporatorCoilQty"];
                this.columnEvaporatorFanQty = base.Columns["EvaporatorFanQty"];
                this.columnEvaporatorHeaterQTY = base.Columns["EvaporatorHeaterQTY"];
                this.columnEvaporatorCFM = base.Columns["EvaporatorCFM"];
                this.columnEvaporatorRefCharge = base.Columns["EvaporatorRefCharge"];
                this.columnEvaporatorPrice = base.Columns["EvaporatorPrice"];
                this.columnLowVelocity = base.Columns["LowVelocity"];
                this.columnLiquid = base.Columns["Liquid"];
                this.columnSuction = base.Columns["Suction"];
                this.columnHotGas = base.Columns["HotGas"];
                this.columnConnQty = base.Columns["ConnQty"];
                this.columnFanArrangement = base.Columns["FanArrangement"];
                this.columnSSucTemp = base.Columns["SSucTemp"];
                this.columnFSucTemp = base.Columns["FSucTemp"];
                this.columnEvaporatorType = base.Columns["EvaporatorType"];
                this.columnCoilType = base.Columns["CoilType"];
                this.columnCoilTubes = base.Columns["CoilTubes"];
                this.columnCoilRow = base.Columns["CoilRow"];
                this.columnCoilFPI = base.Columns["CoilFPI"];
                this.columnCoilLength = base.Columns["CoilLength"];
                this.columnCoilModel = base.Columns["CoilModel"];
                this.columnEvaporatorTypeDesc = base.Columns["EvaporatorTypeDesc"];
                this.columnEvaporatorStyleDesc = base.Columns["EvaporatorStyleDesc"];
                this.columnDefrostTypeID = base.Columns["DefrostTypeID"];
                this.columnDefrostTypeDescription = base.Columns["DefrostTypeDescription"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnVoltageID = base.Columns["VoltageID"];
                this.columnStandardFPI = base.Columns["StandardFPI"];
                this.columnCurrentFPI = base.Columns["CurrentFPI"];
                this.columnFPIMultiplier = base.Columns["FPIMultiplier"];
                this.columnVoltDescription = base.Columns["VoltDescription"];
                this.columnVoltsValue = base.Columns["VoltsValue"];
                this.columnPhaseNumber = base.Columns["PhaseNumber"];
                this.columnHzValue = base.Columns["HzValue"];
                this.columnWattMultiplier = base.Columns["WattMultiplier"];
                this.columnHeaterFLAMultiplier = base.Columns["HeaterFLAMultiplier"];
                this.columnPowerFactorAdjustement = base.Columns["PowerFactorAdjustement"];
                this.columnMotorCoilArr = base.Columns["MotorCoilArr"];
                this.columnPowerSupply = base.Columns["PowerSupply"];
                this.columnCapacityMultiplier = base.Columns["CapacityMultiplier"];
                this.columnMotor = base.Columns["Motor"];
                this.columnMotorHP = base.Columns["MotorHP"];
                this.columnMotorRPM = base.Columns["MotorRPM"];
                this.columnMotorRotType = base.Columns["MotorRotType"];
                this.columnMotorFrameType = base.Columns["MotorFrameType"];
                this.columnMotorShaftLength = base.Columns["MotorShaftLength"];
                this.columnMotorPrice = base.Columns["MotorPrice"];
                this.columnMotorFLA = base.Columns["MotorFLA"];
                this.columnMotorMount = base.Columns["MotorMount"];
                this.columnMotorMountFanSize = base.Columns["MotorMountFanSize"];
                this.columnMotorMountFrameSize = base.Columns["MotorMountFrameSize"];
                this.columnMotorMountComposition = base.Columns["MotorMountComposition"];
                this.columnMotorMountPrice = base.Columns["MotorMountPrice"];
                this.columnFan = base.Columns["Fan"];
                this.columnFanDiameter = base.Columns["FanDiameter"];
                this.columnFanBladeQuantity = base.Columns["FanBladeQuantity"];
                this.columnFanRotationType = base.Columns["FanRotationType"];
                this.columnFanComposition = base.Columns["FanComposition"];
                this.columnFanPitch = base.Columns["FanPitch"];
                this.columnFanPrice = base.Columns["FanPrice"];
                this.columnFanGuard = base.Columns["FanGuard"];
                this.columnFanGuardFanSize = base.Columns["FanGuardFanSize"];
                this.columnFanGuardComposition = base.Columns["FanGuardComposition"];
                this.columnDefrostHeater = base.Columns["DefrostHeater"];
                this.columnDefrostHeaterType = base.Columns["DefrostHeaterType"];
                this.columnDefrostHeaterVolt = base.Columns["DefrostHeaterVolt"];
                this.columnDefrostHeaterWatt = base.Columns["DefrostHeaterWatt"];
                this.columnDefrostHeaterDesc = base.Columns["DefrostHeaterDesc"];
                this.columnDefrostHeaterPrice = base.Columns["DefrostHeaterPrice"];
                this.columnDefrostHeaterKilowatts = base.Columns["DefrostHeaterKilowatts"];
                this.columnCapacityMultiplied = base.Columns["CapacityMultiplied"];
                this.columnTD_FOR_CAPACITY = base.Columns["TD_FOR_CAPACITY"];
                this.columnCAPACITY_FOR_TD = base.Columns["CAPACITY_FOR_TD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnQuoteID = new global::System.Data.DataColumn("QuoteID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuoteID);
                this.columnQuoteRevision = new global::System.Data.DataColumn("QuoteRevision", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuoteRevision);
                this.columnQuoteRevisionText = new global::System.Data.DataColumn("QuoteRevisionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuoteRevisionText);
                this.columnItemType = new global::System.Data.DataColumn("ItemType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemType);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnAttachToCondensingUnit = new global::System.Data.DataColumn("AttachToCondensingUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachToCondensingUnit);
                this.columnCondensingUnitItemID = new global::System.Data.DataColumn("CondensingUnitItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondensingUnitItemID);
                this.columnCondensingUnitSystemName = new global::System.Data.DataColumn("CondensingUnitSystemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondensingUnitSystemName);
                this.columnTag = new global::System.Data.DataColumn("Tag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTag);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnSuctionTemperature = new global::System.Data.DataColumn("SuctionTemperature", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuctionTemperature);
                this.columnLiquidTemperature = new global::System.Data.DataColumn("LiquidTemperature", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiquidTemperature);
                this.columnRefrigerantText = new global::System.Data.DataColumn("RefrigerantText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefrigerantText);
                this.columnDefrostText = new global::System.Data.DataColumn("DefrostText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostText);
                this.columnVoltageText = new global::System.Data.DataColumn("VoltageText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltageText);
                this.columnFPIText = new global::System.Data.DataColumn("FPIText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPIText);
                this.columnTemperatureRangeMin = new global::System.Data.DataColumn("TemperatureRangeMin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperatureRangeMin);
                this.columnTemperatureRangeMax = new global::System.Data.DataColumn("TemperatureRangeMax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperatureRangeMax);
                this.columnRequiredCapacity = new global::System.Data.DataColumn("RequiredCapacity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredCapacity);
                this.columnSelectionTypeText = new global::System.Data.DataColumn("SelectionTypeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionTypeText);
                this.columnModelText = new global::System.Data.DataColumn("ModelText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelText);
                this.columnCoilCoatingText = new global::System.Data.DataColumn("CoilCoatingText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilCoatingText);
                this.columnCoilCoatingPrice = new global::System.Data.DataColumn("CoilCoatingPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilCoatingPrice);
                this.columnFinMaterialText = new global::System.Data.DataColumn("FinMaterialText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinMaterialText);
                this.columnFinMaterialPrice = new global::System.Data.DataColumn("FinMaterialPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinMaterialPrice);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnRefrigerantChargeMultiplier = new global::System.Data.DataColumn("RefrigerantChargeMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefrigerantChargeMultiplier);
                this.columnMotorMCA = new global::System.Data.DataColumn("MotorMCA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMCA);
                this.columnMotorMOP = new global::System.Data.DataColumn("MotorMOP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMOP);
                this.columnMotorFUSE = new global::System.Data.DataColumn("MotorFUSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorFUSE);
                this.columnHeaterFLA = new global::System.Data.DataColumn("HeaterFLA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaterFLA);
                this.columnHeaterMCA = new global::System.Data.DataColumn("HeaterMCA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaterMCA);
                this.columnHeaterFUSE = new global::System.Data.DataColumn("HeaterFUSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaterFUSE);
                this.columnDimensionDrawing = new global::System.Data.DataColumn("DimensionDrawing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDimensionDrawing);
                this.columnElectricalDrawing = new global::System.Data.DataColumn("ElectricalDrawing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElectricalDrawing);
                this.columnEvaporatorID = new global::System.Data.DataColumn("EvaporatorID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorID);
                this.columnCapacityAt10TD = new global::System.Data.DataColumn("CapacityAt10TD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacityAt10TD);
                this.columnDefrostType = new global::System.Data.DataColumn("DefrostType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostType);
                this.columnEvaporatorCapacity = new global::System.Data.DataColumn("EvaporatorCapacity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorCapacity);
                this.columnEvaporatorWeight = new global::System.Data.DataColumn("EvaporatorWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorWeight);
                this.columnEvaporatorCoilQty = new global::System.Data.DataColumn("EvaporatorCoilQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorCoilQty);
                this.columnEvaporatorFanQty = new global::System.Data.DataColumn("EvaporatorFanQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorFanQty);
                this.columnEvaporatorHeaterQTY = new global::System.Data.DataColumn("EvaporatorHeaterQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorHeaterQTY);
                this.columnEvaporatorCFM = new global::System.Data.DataColumn("EvaporatorCFM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorCFM);
                this.columnEvaporatorRefCharge = new global::System.Data.DataColumn("EvaporatorRefCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorRefCharge);
                this.columnEvaporatorPrice = new global::System.Data.DataColumn("EvaporatorPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorPrice);
                this.columnLowVelocity = new global::System.Data.DataColumn("LowVelocity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowVelocity);
                this.columnLiquid = new global::System.Data.DataColumn("Liquid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiquid);
                this.columnSuction = new global::System.Data.DataColumn("Suction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuction);
                this.columnHotGas = new global::System.Data.DataColumn("HotGas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHotGas);
                this.columnConnQty = new global::System.Data.DataColumn("ConnQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnQty);
                this.columnFanArrangement = new global::System.Data.DataColumn("FanArrangement", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanArrangement);
                this.columnSSucTemp = new global::System.Data.DataColumn("SSucTemp", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSucTemp);
                this.columnFSucTemp = new global::System.Data.DataColumn("FSucTemp", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSucTemp);
                this.columnEvaporatorType = new global::System.Data.DataColumn("EvaporatorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorType);
                this.columnCoilType = new global::System.Data.DataColumn("CoilType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilType);
                this.columnCoilTubes = new global::System.Data.DataColumn("CoilTubes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilTubes);
                this.columnCoilRow = new global::System.Data.DataColumn("CoilRow", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilRow);
                this.columnCoilFPI = new global::System.Data.DataColumn("CoilFPI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilFPI);
                this.columnCoilLength = new global::System.Data.DataColumn("CoilLength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilLength);
                this.columnCoilModel = new global::System.Data.DataColumn("CoilModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilModel);
                this.columnEvaporatorTypeDesc = new global::System.Data.DataColumn("EvaporatorTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorTypeDesc);
                this.columnEvaporatorStyleDesc = new global::System.Data.DataColumn("EvaporatorStyleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaporatorStyleDesc);
                this.columnDefrostTypeID = new global::System.Data.DataColumn("DefrostTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostTypeID);
                this.columnDefrostTypeDescription = new global::System.Data.DataColumn("DefrostTypeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostTypeDescription);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnVoltageID = new global::System.Data.DataColumn("VoltageID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltageID);
                this.columnStandardFPI = new global::System.Data.DataColumn("StandardFPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardFPI);
                this.columnCurrentFPI = new global::System.Data.DataColumn("CurrentFPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentFPI);
                this.columnFPIMultiplier = new global::System.Data.DataColumn("FPIMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPIMultiplier);
                this.columnVoltDescription = new global::System.Data.DataColumn("VoltDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltDescription);
                this.columnVoltsValue = new global::System.Data.DataColumn("VoltsValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltsValue);
                this.columnPhaseNumber = new global::System.Data.DataColumn("PhaseNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseNumber);
                this.columnHzValue = new global::System.Data.DataColumn("HzValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHzValue);
                this.columnWattMultiplier = new global::System.Data.DataColumn("WattMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWattMultiplier);
                this.columnHeaterFLAMultiplier = new global::System.Data.DataColumn("HeaterFLAMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaterFLAMultiplier);
                this.columnPowerFactorAdjustement = new global::System.Data.DataColumn("PowerFactorAdjustement", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorAdjustement);
                this.columnMotorCoilArr = new global::System.Data.DataColumn("MotorCoilArr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorCoilArr);
                this.columnPowerSupply = new global::System.Data.DataColumn("PowerSupply", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerSupply);
                this.columnCapacityMultiplier = new global::System.Data.DataColumn("CapacityMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacityMultiplier);
                this.columnMotor = new global::System.Data.DataColumn("Motor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotor);
                this.columnMotorHP = new global::System.Data.DataColumn("MotorHP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorHP);
                this.columnMotorRPM = new global::System.Data.DataColumn("MotorRPM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorRPM);
                this.columnMotorRotType = new global::System.Data.DataColumn("MotorRotType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorRotType);
                this.columnMotorFrameType = new global::System.Data.DataColumn("MotorFrameType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorFrameType);
                this.columnMotorShaftLength = new global::System.Data.DataColumn("MotorShaftLength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorShaftLength);
                this.columnMotorPrice = new global::System.Data.DataColumn("MotorPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorPrice);
                this.columnMotorFLA = new global::System.Data.DataColumn("MotorFLA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorFLA);
                this.columnMotorMount = new global::System.Data.DataColumn("MotorMount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMount);
                this.columnMotorMountFanSize = new global::System.Data.DataColumn("MotorMountFanSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMountFanSize);
                this.columnMotorMountFrameSize = new global::System.Data.DataColumn("MotorMountFrameSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMountFrameSize);
                this.columnMotorMountComposition = new global::System.Data.DataColumn("MotorMountComposition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMountComposition);
                this.columnMotorMountPrice = new global::System.Data.DataColumn("MotorMountPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorMountPrice);
                this.columnFan = new global::System.Data.DataColumn("Fan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFan);
                this.columnFanDiameter = new global::System.Data.DataColumn("FanDiameter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanDiameter);
                this.columnFanBladeQuantity = new global::System.Data.DataColumn("FanBladeQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanBladeQuantity);
                this.columnFanRotationType = new global::System.Data.DataColumn("FanRotationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanRotationType);
                this.columnFanComposition = new global::System.Data.DataColumn("FanComposition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanComposition);
                this.columnFanPitch = new global::System.Data.DataColumn("FanPitch", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanPitch);
                this.columnFanPrice = new global::System.Data.DataColumn("FanPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanPrice);
                this.columnFanGuard = new global::System.Data.DataColumn("FanGuard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanGuard);
                this.columnFanGuardFanSize = new global::System.Data.DataColumn("FanGuardFanSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanGuardFanSize);
                this.columnFanGuardComposition = new global::System.Data.DataColumn("FanGuardComposition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFanGuardComposition);
                this.columnDefrostHeater = new global::System.Data.DataColumn("DefrostHeater", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeater);
                this.columnDefrostHeaterType = new global::System.Data.DataColumn("DefrostHeaterType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterType);
                this.columnDefrostHeaterVolt = new global::System.Data.DataColumn("DefrostHeaterVolt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterVolt);
                this.columnDefrostHeaterWatt = new global::System.Data.DataColumn("DefrostHeaterWatt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterWatt);
                this.columnDefrostHeaterDesc = new global::System.Data.DataColumn("DefrostHeaterDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterDesc);
                this.columnDefrostHeaterPrice = new global::System.Data.DataColumn("DefrostHeaterPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterPrice);
                this.columnDefrostHeaterKilowatts = new global::System.Data.DataColumn("DefrostHeaterKilowatts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefrostHeaterKilowatts);
                this.columnCapacityMultiplied = new global::System.Data.DataColumn("CapacityMultiplied", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacityMultiplied);
                this.columnTD_FOR_CAPACITY = new global::System.Data.DataColumn("TD_FOR_CAPACITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTD_FOR_CAPACITY);
                this.columnCAPACITY_FOR_TD = new global::System.Data.DataColumn("CAPACITY_FOR_TD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAPACITY_FOR_TD);
                this.CaseSensitive = false;
                this.Locale = new global::System.Globalization.CultureInfo("en-US");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsRow NewEvaporatorsRow() {
                return ((EvaporatorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EvaporatorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EvaporatorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EvaporatorsRowChanged != null)) {
                    this.EvaporatorsRowChanged(this, new EvaporatorsRowChangeEvent(((EvaporatorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EvaporatorsRowChanging != null)) {
                    this.EvaporatorsRowChanging(this, new EvaporatorsRowChangeEvent(((EvaporatorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EvaporatorsRowDeleted != null)) {
                    this.EvaporatorsRowDeleted(this, new EvaporatorsRowChangeEvent(((EvaporatorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EvaporatorsRowDeleting != null)) {
                    this.EvaporatorsRowDeleting(this, new EvaporatorsRowChangeEvent(((EvaporatorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEvaporatorsRow(EvaporatorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EvaporatorDATA ds = new EvaporatorDATA();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EvaporatorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EvaporatorsRow : global::System.Data.DataRow {
            
            private EvaporatorsDataTable tableEvaporators;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EvaporatorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEvaporators = ((EvaporatorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuoteID {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.QuoteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuoteID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.QuoteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuoteRevision {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.QuoteRevisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuoteRevision\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.QuoteRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QuoteRevisionText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.QuoteRevisionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuoteRevisionText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.QuoteRevisionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemType {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.ItemTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.ItemTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemID {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Username {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.UsernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Username\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AttachToCondensingUnit {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.AttachToCondensingUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttachToCondensingUnit\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.AttachToCondensingUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CondensingUnitItemID {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.CondensingUnitItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondensingUnitItemID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CondensingUnitItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondensingUnitSystemName {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.CondensingUnitSystemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondensingUnitSystemName\' in table \'Evaporators\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CondensingUnitSystemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tag {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.TagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tag\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.TagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SuctionTemperature {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.SuctionTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuctionTemperature\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.SuctionTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LiquidTemperature {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.LiquidTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LiquidTemperature\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.LiquidTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefrigerantText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.RefrigerantTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefrigerantText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.RefrigerantTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VoltageText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.VoltageTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltageText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.VoltageTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FPIText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FPITextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPIText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FPITextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TemperatureRangeMin {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.TemperatureRangeMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemperatureRangeMin\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.TemperatureRangeMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TemperatureRangeMax {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.TemperatureRangeMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemperatureRangeMax\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.TemperatureRangeMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RequiredCapacity {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.RequiredCapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiredCapacity\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.RequiredCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SelectionTypeText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.SelectionTypeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectionTypeText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.SelectionTypeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ModelText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.ModelTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.ModelTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoilCoatingText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.CoilCoatingTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilCoatingText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilCoatingTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CoilCoatingPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CoilCoatingPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilCoatingPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilCoatingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FinMaterialText {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FinMaterialTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinMaterialText\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FinMaterialTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FinMaterialPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FinMaterialPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinMaterialPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FinMaterialPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RefrigerantChargeMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.RefrigerantChargeMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefrigerantChargeMultiplier\' in table \'Evaporators\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.RefrigerantChargeMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorMCA {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorMCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMCA\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorMOP {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorMOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMOP\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorFUSE {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorFUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorFUSE\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorFUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HeaterFLA {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HeaterFLAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaterFLA\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HeaterFLAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HeaterMCA {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HeaterMCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaterMCA\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HeaterMCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HeaterFUSE {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HeaterFUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaterFUSE\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HeaterFUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DimensionDrawing {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DimensionDrawingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DimensionDrawing\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DimensionDrawingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ElectricalDrawing {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.ElectricalDrawingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElectricalDrawing\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.ElectricalDrawingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EvaporatorID {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.EvaporatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CapacityAt10TD {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CapacityAt10TDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapacityAt10TD\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CapacityAt10TDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorCapacity {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorCapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorCapacity\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorWeight\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorCoilQty {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorCoilQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorCoilQty\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorCoilQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorFanQty {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorFanQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorFanQty\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorFanQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorHeaterQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorHeaterQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorHeaterQTY\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorHeaterQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorCFM {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorCFMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorCFM\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorCFMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorRefCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorRefChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorRefCharge\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorRefChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EvaporatorPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.EvaporatorPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LowVelocity {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.LowVelocityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowVelocity\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.LowVelocityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Liquid {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.LiquidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Liquid\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.LiquidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Suction {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.SuctionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suction\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.SuctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HotGas {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HotGasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HotGas\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HotGasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConnQty {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.ConnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnQty\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.ConnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FanArrangement {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FanArrangementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanArrangement\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanArrangementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SSucTemp {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.SSucTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSucTemp\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.SSucTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FSucTemp {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FSucTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSucTemp\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FSucTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EvaporatorType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.EvaporatorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoilType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.CoilTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoilTubes {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.CoilTubesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilTubes\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilTubesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoilRow {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.CoilRowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilRow\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoilFPI {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.CoilFPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilFPI\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilFPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CoilLength {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CoilLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilLength\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoilModel {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.CoilModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilModel\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CoilModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EvaporatorTypeDesc {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.EvaporatorTypeDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorTypeDesc\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EvaporatorStyleDesc {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.EvaporatorStyleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvaporatorStyleDesc\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.EvaporatorStyleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostTypeID {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostTypeID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostTypeDescription {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostTypeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostTypeDescription\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostTypeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitID {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltageID {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.VoltageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltageID\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.VoltageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StandardFPI {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.StandardFPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardFPI\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.StandardFPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentFPI {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CurrentFPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentFPI\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CurrentFPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FPIMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FPIMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPIMultiplier\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FPIMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VoltDescription {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.VoltDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltDescription\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.VoltDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltsValue {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.VoltsValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltsValue\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.VoltsValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.PhaseNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseNumber\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.PhaseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HzValue {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HzValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HzValue\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HzValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WattMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.WattMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WattMultiplier\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.WattMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HeaterFLAMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.HeaterFLAMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaterFLAMultiplier\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.HeaterFLAMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorAdjustement {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.PowerFactorAdjustementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorAdjustement\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.PowerFactorAdjustementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorCoilArr {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorCoilArrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorCoilArr\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorCoilArrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PowerSupply {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.PowerSupplyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerSupply\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.PowerSupplyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CapacityMultiplier {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CapacityMultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapacityMultiplier\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CapacityMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motor {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motor\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorHP {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorHPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorHP\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorHPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorRPM {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorRPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorRPM\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorRPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorRotType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorRotTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorRotType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorRotTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorFrameType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorFrameTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorFrameType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorFrameTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorShaftLength {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorShaftLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorShaftLength\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorShaftLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorFLA {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorFLAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorFLA\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorFLAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorMount {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorMountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMount\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorMountFanSize {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorMountFanSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMountFanSize\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMountFanSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorMountFrameSize {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorMountFrameSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMountFrameSize\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMountFrameSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorMountComposition {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.MotorMountCompositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMountComposition\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMountCompositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MotorMountPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.MotorMountPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorMountPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.MotorMountPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fan {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fan\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FanDiameter {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FanDiameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanDiameter\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanDiameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FanBladeQuantity {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.FanBladeQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanBladeQuantity\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanBladeQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FanRotationType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FanRotationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanRotationType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanRotationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FanComposition {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FanCompositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanComposition\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanCompositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FanPitch {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FanPitchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanPitch\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanPitchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FanPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FanPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FanGuard {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FanGuardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanGuard\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanGuardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FanGuardFanSize {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.FanGuardFanSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanGuardFanSize\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanGuardFanSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FanGuardComposition {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.FanGuardCompositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FanGuardComposition\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.FanGuardCompositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostHeater {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostHeaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeater\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostHeaterType {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostHeaterTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterType\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DefrostHeaterVolt {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.DefrostHeaterVoltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterVolt\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterVoltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DefrostHeaterWatt {
                get {
                    try {
                        return ((int)(this[this.tableEvaporators.DefrostHeaterWattColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterWatt\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterWattColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefrostHeaterDesc {
                get {
                    try {
                        return ((string)(this[this.tableEvaporators.DefrostHeaterDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterDesc\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefrostHeaterPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.DefrostHeaterPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterPrice\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefrostHeaterKilowatts {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.DefrostHeaterKilowattsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefrostHeaterKilowatts\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.DefrostHeaterKilowattsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CapacityMultiplied {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CapacityMultipliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapacityMultiplied\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CapacityMultipliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TD_FOR_CAPACITY {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.TD_FOR_CAPACITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TD_FOR_CAPACITY\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.TD_FOR_CAPACITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CAPACITY_FOR_TD {
                get {
                    try {
                        return ((decimal)(this[this.tableEvaporators.CAPACITY_FOR_TDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAPACITY_FOR_TD\' in table \'Evaporators\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvaporators.CAPACITY_FOR_TDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuoteIDNull() {
                return this.IsNull(this.tableEvaporators.QuoteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuoteIDNull() {
                this[this.tableEvaporators.QuoteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuoteRevisionNull() {
                return this.IsNull(this.tableEvaporators.QuoteRevisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuoteRevisionNull() {
                this[this.tableEvaporators.QuoteRevisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuoteRevisionTextNull() {
                return this.IsNull(this.tableEvaporators.QuoteRevisionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuoteRevisionTextNull() {
                this[this.tableEvaporators.QuoteRevisionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemTypeNull() {
                return this.IsNull(this.tableEvaporators.ItemTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemTypeNull() {
                this[this.tableEvaporators.ItemTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableEvaporators.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemIDNull() {
                this[this.tableEvaporators.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsernameNull() {
                return this.IsNull(this.tableEvaporators.UsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUsernameNull() {
                this[this.tableEvaporators.UsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttachToCondensingUnitNull() {
                return this.IsNull(this.tableEvaporators.AttachToCondensingUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttachToCondensingUnitNull() {
                this[this.tableEvaporators.AttachToCondensingUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondensingUnitItemIDNull() {
                return this.IsNull(this.tableEvaporators.CondensingUnitItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondensingUnitItemIDNull() {
                this[this.tableEvaporators.CondensingUnitItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondensingUnitSystemNameNull() {
                return this.IsNull(this.tableEvaporators.CondensingUnitSystemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondensingUnitSystemNameNull() {
                this[this.tableEvaporators.CondensingUnitSystemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTagNull() {
                return this.IsNull(this.tableEvaporators.TagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTagNull() {
                this[this.tableEvaporators.TagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableEvaporators.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableEvaporators.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuctionTemperatureNull() {
                return this.IsNull(this.tableEvaporators.SuctionTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuctionTemperatureNull() {
                this[this.tableEvaporators.SuctionTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLiquidTemperatureNull() {
                return this.IsNull(this.tableEvaporators.LiquidTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLiquidTemperatureNull() {
                this[this.tableEvaporators.LiquidTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefrigerantTextNull() {
                return this.IsNull(this.tableEvaporators.RefrigerantTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefrigerantTextNull() {
                this[this.tableEvaporators.RefrigerantTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostTextNull() {
                return this.IsNull(this.tableEvaporators.DefrostTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostTextNull() {
                this[this.tableEvaporators.DefrostTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltageTextNull() {
                return this.IsNull(this.tableEvaporators.VoltageTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltageTextNull() {
                this[this.tableEvaporators.VoltageTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFPITextNull() {
                return this.IsNull(this.tableEvaporators.FPITextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFPITextNull() {
                this[this.tableEvaporators.FPITextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureRangeMinNull() {
                return this.IsNull(this.tableEvaporators.TemperatureRangeMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureRangeMinNull() {
                this[this.tableEvaporators.TemperatureRangeMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureRangeMaxNull() {
                return this.IsNull(this.tableEvaporators.TemperatureRangeMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureRangeMaxNull() {
                this[this.tableEvaporators.TemperatureRangeMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequiredCapacityNull() {
                return this.IsNull(this.tableEvaporators.RequiredCapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequiredCapacityNull() {
                this[this.tableEvaporators.RequiredCapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectionTypeTextNull() {
                return this.IsNull(this.tableEvaporators.SelectionTypeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSelectionTypeTextNull() {
                this[this.tableEvaporators.SelectionTypeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModelTextNull() {
                return this.IsNull(this.tableEvaporators.ModelTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModelTextNull() {
                this[this.tableEvaporators.ModelTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilCoatingTextNull() {
                return this.IsNull(this.tableEvaporators.CoilCoatingTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilCoatingTextNull() {
                this[this.tableEvaporators.CoilCoatingTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilCoatingPriceNull() {
                return this.IsNull(this.tableEvaporators.CoilCoatingPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilCoatingPriceNull() {
                this[this.tableEvaporators.CoilCoatingPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinMaterialTextNull() {
                return this.IsNull(this.tableEvaporators.FinMaterialTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinMaterialTextNull() {
                this[this.tableEvaporators.FinMaterialTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinMaterialPriceNull() {
                return this.IsNull(this.tableEvaporators.FinMaterialPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinMaterialPriceNull() {
                this[this.tableEvaporators.FinMaterialPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableEvaporators.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableEvaporators.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tableEvaporators.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceNull() {
                this[this.tableEvaporators.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefrigerantChargeMultiplierNull() {
                return this.IsNull(this.tableEvaporators.RefrigerantChargeMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefrigerantChargeMultiplierNull() {
                this[this.tableEvaporators.RefrigerantChargeMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMCANull() {
                return this.IsNull(this.tableEvaporators.MotorMCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMCANull() {
                this[this.tableEvaporators.MotorMCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMOPNull() {
                return this.IsNull(this.tableEvaporators.MotorMOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMOPNull() {
                this[this.tableEvaporators.MotorMOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorFUSENull() {
                return this.IsNull(this.tableEvaporators.MotorFUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorFUSENull() {
                this[this.tableEvaporators.MotorFUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeaterFLANull() {
                return this.IsNull(this.tableEvaporators.HeaterFLAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeaterFLANull() {
                this[this.tableEvaporators.HeaterFLAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeaterMCANull() {
                return this.IsNull(this.tableEvaporators.HeaterMCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeaterMCANull() {
                this[this.tableEvaporators.HeaterMCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeaterFUSENull() {
                return this.IsNull(this.tableEvaporators.HeaterFUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeaterFUSENull() {
                this[this.tableEvaporators.HeaterFUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDimensionDrawingNull() {
                return this.IsNull(this.tableEvaporators.DimensionDrawingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDimensionDrawingNull() {
                this[this.tableEvaporators.DimensionDrawingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElectricalDrawingNull() {
                return this.IsNull(this.tableEvaporators.ElectricalDrawingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElectricalDrawingNull() {
                this[this.tableEvaporators.ElectricalDrawingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorIDNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorIDNull() {
                this[this.tableEvaporators.EvaporatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCapacityAt10TDNull() {
                return this.IsNull(this.tableEvaporators.CapacityAt10TDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCapacityAt10TDNull() {
                this[this.tableEvaporators.CapacityAt10TDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostTypeNull() {
                return this.IsNull(this.tableEvaporators.DefrostTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostTypeNull() {
                this[this.tableEvaporators.DefrostTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorCapacityNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorCapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorCapacityNull() {
                this[this.tableEvaporators.EvaporatorCapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorWeightNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorWeightNull() {
                this[this.tableEvaporators.EvaporatorWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorCoilQtyNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorCoilQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorCoilQtyNull() {
                this[this.tableEvaporators.EvaporatorCoilQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorFanQtyNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorFanQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorFanQtyNull() {
                this[this.tableEvaporators.EvaporatorFanQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorHeaterQTYNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorHeaterQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorHeaterQTYNull() {
                this[this.tableEvaporators.EvaporatorHeaterQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorCFMNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorCFMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorCFMNull() {
                this[this.tableEvaporators.EvaporatorCFMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorRefChargeNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorRefChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorRefChargeNull() {
                this[this.tableEvaporators.EvaporatorRefChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorPriceNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorPriceNull() {
                this[this.tableEvaporators.EvaporatorPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLowVelocityNull() {
                return this.IsNull(this.tableEvaporators.LowVelocityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLowVelocityNull() {
                this[this.tableEvaporators.LowVelocityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLiquidNull() {
                return this.IsNull(this.tableEvaporators.LiquidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLiquidNull() {
                this[this.tableEvaporators.LiquidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuctionNull() {
                return this.IsNull(this.tableEvaporators.SuctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuctionNull() {
                this[this.tableEvaporators.SuctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHotGasNull() {
                return this.IsNull(this.tableEvaporators.HotGasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHotGasNull() {
                this[this.tableEvaporators.HotGasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConnQtyNull() {
                return this.IsNull(this.tableEvaporators.ConnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConnQtyNull() {
                this[this.tableEvaporators.ConnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanArrangementNull() {
                return this.IsNull(this.tableEvaporators.FanArrangementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanArrangementNull() {
                this[this.tableEvaporators.FanArrangementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSucTempNull() {
                return this.IsNull(this.tableEvaporators.SSucTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSucTempNull() {
                this[this.tableEvaporators.SSucTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSucTempNull() {
                return this.IsNull(this.tableEvaporators.FSucTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSucTempNull() {
                this[this.tableEvaporators.FSucTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorTypeNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorTypeNull() {
                this[this.tableEvaporators.EvaporatorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilTypeNull() {
                return this.IsNull(this.tableEvaporators.CoilTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilTypeNull() {
                this[this.tableEvaporators.CoilTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilTubesNull() {
                return this.IsNull(this.tableEvaporators.CoilTubesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilTubesNull() {
                this[this.tableEvaporators.CoilTubesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilRowNull() {
                return this.IsNull(this.tableEvaporators.CoilRowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilRowNull() {
                this[this.tableEvaporators.CoilRowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilFPINull() {
                return this.IsNull(this.tableEvaporators.CoilFPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilFPINull() {
                this[this.tableEvaporators.CoilFPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilLengthNull() {
                return this.IsNull(this.tableEvaporators.CoilLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilLengthNull() {
                this[this.tableEvaporators.CoilLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoilModelNull() {
                return this.IsNull(this.tableEvaporators.CoilModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoilModelNull() {
                this[this.tableEvaporators.CoilModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorTypeDescNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorTypeDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorTypeDescNull() {
                this[this.tableEvaporators.EvaporatorTypeDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEvaporatorStyleDescNull() {
                return this.IsNull(this.tableEvaporators.EvaporatorStyleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEvaporatorStyleDescNull() {
                this[this.tableEvaporators.EvaporatorStyleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostTypeIDNull() {
                return this.IsNull(this.tableEvaporators.DefrostTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostTypeIDNull() {
                this[this.tableEvaporators.DefrostTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostTypeDescriptionNull() {
                return this.IsNull(this.tableEvaporators.DefrostTypeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostTypeDescriptionNull() {
                this[this.tableEvaporators.DefrostTypeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tableEvaporators.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tableEvaporators.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltageIDNull() {
                return this.IsNull(this.tableEvaporators.VoltageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltageIDNull() {
                this[this.tableEvaporators.VoltageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStandardFPINull() {
                return this.IsNull(this.tableEvaporators.StandardFPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStandardFPINull() {
                this[this.tableEvaporators.StandardFPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentFPINull() {
                return this.IsNull(this.tableEvaporators.CurrentFPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentFPINull() {
                this[this.tableEvaporators.CurrentFPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFPIMultiplierNull() {
                return this.IsNull(this.tableEvaporators.FPIMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFPIMultiplierNull() {
                this[this.tableEvaporators.FPIMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltDescriptionNull() {
                return this.IsNull(this.tableEvaporators.VoltDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltDescriptionNull() {
                this[this.tableEvaporators.VoltDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltsValueNull() {
                return this.IsNull(this.tableEvaporators.VoltsValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltsValueNull() {
                this[this.tableEvaporators.VoltsValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseNumberNull() {
                return this.IsNull(this.tableEvaporators.PhaseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseNumberNull() {
                this[this.tableEvaporators.PhaseNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHzValueNull() {
                return this.IsNull(this.tableEvaporators.HzValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHzValueNull() {
                this[this.tableEvaporators.HzValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWattMultiplierNull() {
                return this.IsNull(this.tableEvaporators.WattMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWattMultiplierNull() {
                this[this.tableEvaporators.WattMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeaterFLAMultiplierNull() {
                return this.IsNull(this.tableEvaporators.HeaterFLAMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeaterFLAMultiplierNull() {
                this[this.tableEvaporators.HeaterFLAMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorAdjustementNull() {
                return this.IsNull(this.tableEvaporators.PowerFactorAdjustementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorAdjustementNull() {
                this[this.tableEvaporators.PowerFactorAdjustementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorCoilArrNull() {
                return this.IsNull(this.tableEvaporators.MotorCoilArrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorCoilArrNull() {
                this[this.tableEvaporators.MotorCoilArrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerSupplyNull() {
                return this.IsNull(this.tableEvaporators.PowerSupplyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerSupplyNull() {
                this[this.tableEvaporators.PowerSupplyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCapacityMultiplierNull() {
                return this.IsNull(this.tableEvaporators.CapacityMultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCapacityMultiplierNull() {
                this[this.tableEvaporators.CapacityMultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorNull() {
                return this.IsNull(this.tableEvaporators.MotorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorNull() {
                this[this.tableEvaporators.MotorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorHPNull() {
                return this.IsNull(this.tableEvaporators.MotorHPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorHPNull() {
                this[this.tableEvaporators.MotorHPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorRPMNull() {
                return this.IsNull(this.tableEvaporators.MotorRPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorRPMNull() {
                this[this.tableEvaporators.MotorRPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorRotTypeNull() {
                return this.IsNull(this.tableEvaporators.MotorRotTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorRotTypeNull() {
                this[this.tableEvaporators.MotorRotTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorFrameTypeNull() {
                return this.IsNull(this.tableEvaporators.MotorFrameTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorFrameTypeNull() {
                this[this.tableEvaporators.MotorFrameTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorShaftLengthNull() {
                return this.IsNull(this.tableEvaporators.MotorShaftLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorShaftLengthNull() {
                this[this.tableEvaporators.MotorShaftLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorPriceNull() {
                return this.IsNull(this.tableEvaporators.MotorPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorPriceNull() {
                this[this.tableEvaporators.MotorPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorFLANull() {
                return this.IsNull(this.tableEvaporators.MotorFLAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorFLANull() {
                this[this.tableEvaporators.MotorFLAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMountNull() {
                return this.IsNull(this.tableEvaporators.MotorMountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMountNull() {
                this[this.tableEvaporators.MotorMountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMountFanSizeNull() {
                return this.IsNull(this.tableEvaporators.MotorMountFanSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMountFanSizeNull() {
                this[this.tableEvaporators.MotorMountFanSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMountFrameSizeNull() {
                return this.IsNull(this.tableEvaporators.MotorMountFrameSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMountFrameSizeNull() {
                this[this.tableEvaporators.MotorMountFrameSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMountCompositionNull() {
                return this.IsNull(this.tableEvaporators.MotorMountCompositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMountCompositionNull() {
                this[this.tableEvaporators.MotorMountCompositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorMountPriceNull() {
                return this.IsNull(this.tableEvaporators.MotorMountPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorMountPriceNull() {
                this[this.tableEvaporators.MotorMountPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanNull() {
                return this.IsNull(this.tableEvaporators.FanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanNull() {
                this[this.tableEvaporators.FanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanDiameterNull() {
                return this.IsNull(this.tableEvaporators.FanDiameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanDiameterNull() {
                this[this.tableEvaporators.FanDiameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanBladeQuantityNull() {
                return this.IsNull(this.tableEvaporators.FanBladeQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanBladeQuantityNull() {
                this[this.tableEvaporators.FanBladeQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanRotationTypeNull() {
                return this.IsNull(this.tableEvaporators.FanRotationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanRotationTypeNull() {
                this[this.tableEvaporators.FanRotationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanCompositionNull() {
                return this.IsNull(this.tableEvaporators.FanCompositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanCompositionNull() {
                this[this.tableEvaporators.FanCompositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanPitchNull() {
                return this.IsNull(this.tableEvaporators.FanPitchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanPitchNull() {
                this[this.tableEvaporators.FanPitchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanPriceNull() {
                return this.IsNull(this.tableEvaporators.FanPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanPriceNull() {
                this[this.tableEvaporators.FanPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanGuardNull() {
                return this.IsNull(this.tableEvaporators.FanGuardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanGuardNull() {
                this[this.tableEvaporators.FanGuardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanGuardFanSizeNull() {
                return this.IsNull(this.tableEvaporators.FanGuardFanSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanGuardFanSizeNull() {
                this[this.tableEvaporators.FanGuardFanSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFanGuardCompositionNull() {
                return this.IsNull(this.tableEvaporators.FanGuardCompositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFanGuardCompositionNull() {
                this[this.tableEvaporators.FanGuardCompositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterNull() {
                this[this.tableEvaporators.DefrostHeaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterTypeNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterTypeNull() {
                this[this.tableEvaporators.DefrostHeaterTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterVoltNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterVoltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterVoltNull() {
                this[this.tableEvaporators.DefrostHeaterVoltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterWattNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterWattColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterWattNull() {
                this[this.tableEvaporators.DefrostHeaterWattColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterDescNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterDescNull() {
                this[this.tableEvaporators.DefrostHeaterDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterPriceNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterPriceNull() {
                this[this.tableEvaporators.DefrostHeaterPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefrostHeaterKilowattsNull() {
                return this.IsNull(this.tableEvaporators.DefrostHeaterKilowattsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefrostHeaterKilowattsNull() {
                this[this.tableEvaporators.DefrostHeaterKilowattsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCapacityMultipliedNull() {
                return this.IsNull(this.tableEvaporators.CapacityMultipliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCapacityMultipliedNull() {
                this[this.tableEvaporators.CapacityMultipliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTD_FOR_CAPACITYNull() {
                return this.IsNull(this.tableEvaporators.TD_FOR_CAPACITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTD_FOR_CAPACITYNull() {
                this[this.tableEvaporators.TD_FOR_CAPACITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCAPACITY_FOR_TDNull() {
                return this.IsNull(this.tableEvaporators.CAPACITY_FOR_TDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCAPACITY_FOR_TDNull() {
                this[this.tableEvaporators.CAPACITY_FOR_TDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EvaporatorsRowChangeEvent : global::System.EventArgs {
            
            private EvaporatorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsRowChangeEvent(EvaporatorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EvaporatorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591