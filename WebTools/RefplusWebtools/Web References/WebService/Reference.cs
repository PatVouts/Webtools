//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace RefplusWebtools.WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPublicityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPublicityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawing_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDrawingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDrawing_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingList_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompressTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWanIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtainSessionIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSoundRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSoundRatingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::RefplusWebtools.Properties.Settings.Default.RefplusWebtools_WebService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPublicityCompletedEventHandler GetPublicityCompleted;
        
        /// <remarks/>
        public event SendPublicityCompletedEventHandler SendPublicityCompleted;
        
        /// <remarks/>
        public event GetPublicityListCompletedEventHandler GetPublicityListCompleted;
        
        /// <remarks/>
        public event GetDrawingCompletedEventHandler GetDrawingCompleted;
        
        /// <remarks/>
        public event GetDrawing_NEWCompletedEventHandler GetDrawing_NEWCompleted;
        
        /// <remarks/>
        public event GetCategoryCompletedEventHandler GetCategoryCompleted;
        
        /// <remarks/>
        public event SendDrawingCompletedEventHandler SendDrawingCompleted;
        
        /// <remarks/>
        public event SendDrawing_NEWCompletedEventHandler SendDrawing_NEWCompleted;
        
        /// <remarks/>
        public event GetDrawingListCompletedEventHandler GetDrawingListCompleted;
        
        /// <remarks/>
        public event GetDrawingList_NEWCompletedEventHandler GetDrawingList_NEWCompleted;
        
        /// <remarks/>
        public event SelectCompletedEventHandler SelectCompleted;
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event UpdateFilesCompletedEventHandler UpdateFilesCompleted;
        
        /// <remarks/>
        public event CompressTableCompletedEventHandler CompressTableCompleted;
        
        /// <remarks/>
        public event GetWanIPCompletedEventHandler GetWanIPCompleted;
        
        /// <remarks/>
        public event ObtainSessionIDCompletedEventHandler ObtainSessionIDCompleted;
        
        /// <remarks/>
        public event GetSoundRatingCompletedEventHandler GetSoundRatingCompleted;
        
        /// <remarks/>
        public event SendSoundRatingCompletedEventHandler SendSoundRatingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPublicity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPublicity(string FilenameWithExtention, string Key) {
            object[] results = this.Invoke("GetPublicity", new object[] {
                        FilenameWithExtention,
                        Key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicityAsync(string FilenameWithExtention, string Key) {
            this.GetPublicityAsync(FilenameWithExtention, Key, null);
        }
        
        /// <remarks/>
        public void GetPublicityAsync(string FilenameWithExtention, string Key, object userState) {
            if ((this.GetPublicityOperationCompleted == null)) {
                this.GetPublicityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicityOperationCompleted);
            }
            this.InvokeAsync("GetPublicity", new object[] {
                        FilenameWithExtention,
                        Key}, this.GetPublicityOperationCompleted, userState);
        }
        
        private void OnGetPublicityOperationCompleted(object arg) {
            if ((this.GetPublicityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicityCompleted(this, new GetPublicityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPublicity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendPublicity([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bFile, string FilenameWithExtention, string Key) {
            object[] results = this.Invoke("SendPublicity", new object[] {
                        bFile,
                        FilenameWithExtention,
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendPublicityAsync(byte[] bFile, string FilenameWithExtention, string Key) {
            this.SendPublicityAsync(bFile, FilenameWithExtention, Key, null);
        }
        
        /// <remarks/>
        public void SendPublicityAsync(byte[] bFile, string FilenameWithExtention, string Key, object userState) {
            if ((this.SendPublicityOperationCompleted == null)) {
                this.SendPublicityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPublicityOperationCompleted);
            }
            this.InvokeAsync("SendPublicity", new object[] {
                        bFile,
                        FilenameWithExtention,
                        Key}, this.SendPublicityOperationCompleted, userState);
        }
        
        private void OnSendPublicityOperationCompleted(object arg) {
            if ((this.SendPublicityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPublicityCompleted(this, new SendPublicityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPublicityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPublicityList(string Key) {
            object[] results = this.Invoke("GetPublicityList", new object[] {
                        Key});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicityListAsync(string Key) {
            this.GetPublicityListAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetPublicityListAsync(string Key, object userState) {
            if ((this.GetPublicityListOperationCompleted == null)) {
                this.GetPublicityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicityListOperationCompleted);
            }
            this.InvokeAsync("GetPublicityList", new object[] {
                        Key}, this.GetPublicityListOperationCompleted, userState);
        }
        
        private void OnGetPublicityListOperationCompleted(object arg) {
            if ((this.GetPublicityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicityListCompleted(this, new GetPublicityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDrawing(string DrawingNamewithExtention, string Company, string Key) {
            object[] results = this.Invoke("GetDrawing", new object[] {
                        DrawingNamewithExtention,
                        Company,
                        Key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingAsync(string DrawingNamewithExtention, string Company, string Key) {
            this.GetDrawingAsync(DrawingNamewithExtention, Company, Key, null);
        }
        
        /// <remarks/>
        public void GetDrawingAsync(string DrawingNamewithExtention, string Company, string Key, object userState) {
            if ((this.GetDrawingOperationCompleted == null)) {
                this.GetDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingOperationCompleted);
            }
            this.InvokeAsync("GetDrawing", new object[] {
                        DrawingNamewithExtention,
                        Company,
                        Key}, this.GetDrawingOperationCompleted, userState);
        }
        
        private void OnGetDrawingOperationCompleted(object arg) {
            if ((this.GetDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingCompleted(this, new GetDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawing_NEW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDrawing_NEW(string DrawingNamewithExtention, string Company, string Category, string Key) {
            object[] results = this.Invoke("GetDrawing_NEW", new object[] {
                        DrawingNamewithExtention,
                        Company,
                        Category,
                        Key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawing_NEWAsync(string DrawingNamewithExtention, string Company, string Category, string Key) {
            this.GetDrawing_NEWAsync(DrawingNamewithExtention, Company, Category, Key, null);
        }
        
        /// <remarks/>
        public void GetDrawing_NEWAsync(string DrawingNamewithExtention, string Company, string Category, string Key, object userState) {
            if ((this.GetDrawing_NEWOperationCompleted == null)) {
                this.GetDrawing_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawing_NEWOperationCompleted);
            }
            this.InvokeAsync("GetDrawing_NEW", new object[] {
                        DrawingNamewithExtention,
                        Company,
                        Category,
                        Key}, this.GetDrawing_NEWOperationCompleted, userState);
        }
        
        private void OnGetDrawing_NEWOperationCompleted(object arg) {
            if ((this.GetDrawing_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawing_NEWCompleted(this, new GetDrawing_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCategory(string Key) {
            object[] results = this.Invoke("GetCategory", new object[] {
                        Key});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryAsync(string Key) {
            this.GetCategoryAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetCategoryAsync(string Key, object userState) {
            if ((this.GetCategoryOperationCompleted == null)) {
                this.GetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryOperationCompleted);
            }
            this.InvokeAsync("GetCategory", new object[] {
                        Key}, this.GetCategoryOperationCompleted, userState);
        }
        
        private void OnGetCategoryOperationCompleted(object arg) {
            if ((this.GetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryCompleted(this, new GetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDrawing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendDrawing([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bFile, string DrawingNamewithExtention, string Company, string Key) {
            object[] results = this.Invoke("SendDrawing", new object[] {
                        bFile,
                        DrawingNamewithExtention,
                        Company,
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendDrawingAsync(byte[] bFile, string DrawingNamewithExtention, string Company, string Key) {
            this.SendDrawingAsync(bFile, DrawingNamewithExtention, Company, Key, null);
        }
        
        /// <remarks/>
        public void SendDrawingAsync(byte[] bFile, string DrawingNamewithExtention, string Company, string Key, object userState) {
            if ((this.SendDrawingOperationCompleted == null)) {
                this.SendDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDrawingOperationCompleted);
            }
            this.InvokeAsync("SendDrawing", new object[] {
                        bFile,
                        DrawingNamewithExtention,
                        Company,
                        Key}, this.SendDrawingOperationCompleted, userState);
        }
        
        private void OnSendDrawingOperationCompleted(object arg) {
            if ((this.SendDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDrawingCompleted(this, new SendDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDrawing_NEW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendDrawing_NEW([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bFile, string DrawingNamewithExtention, string Company, string Category, string Key) {
            object[] results = this.Invoke("SendDrawing_NEW", new object[] {
                        bFile,
                        DrawingNamewithExtention,
                        Company,
                        Category,
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendDrawing_NEWAsync(byte[] bFile, string DrawingNamewithExtention, string Company, string Category, string Key) {
            this.SendDrawing_NEWAsync(bFile, DrawingNamewithExtention, Company, Category, Key, null);
        }
        
        /// <remarks/>
        public void SendDrawing_NEWAsync(byte[] bFile, string DrawingNamewithExtention, string Company, string Category, string Key, object userState) {
            if ((this.SendDrawing_NEWOperationCompleted == null)) {
                this.SendDrawing_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDrawing_NEWOperationCompleted);
            }
            this.InvokeAsync("SendDrawing_NEW", new object[] {
                        bFile,
                        DrawingNamewithExtention,
                        Company,
                        Category,
                        Key}, this.SendDrawing_NEWOperationCompleted, userState);
        }
        
        private void OnSendDrawing_NEWOperationCompleted(object arg) {
            if ((this.SendDrawing_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDrawing_NEWCompleted(this, new SendDrawing_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDrawingList(string Company, string Key) {
            object[] results = this.Invoke("GetDrawingList", new object[] {
                        Company,
                        Key});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingListAsync(string Company, string Key) {
            this.GetDrawingListAsync(Company, Key, null);
        }
        
        /// <remarks/>
        public void GetDrawingListAsync(string Company, string Key, object userState) {
            if ((this.GetDrawingListOperationCompleted == null)) {
                this.GetDrawingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingListOperationCompleted);
            }
            this.InvokeAsync("GetDrawingList", new object[] {
                        Company,
                        Key}, this.GetDrawingListOperationCompleted, userState);
        }
        
        private void OnGetDrawingListOperationCompleted(object arg) {
            if ((this.GetDrawingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingListCompleted(this, new GetDrawingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingList_NEW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDrawingList_NEW(string Company, string Category, string Key) {
            object[] results = this.Invoke("GetDrawingList_NEW", new object[] {
                        Company,
                        Category,
                        Key});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingList_NEWAsync(string Company, string Category, string Key) {
            this.GetDrawingList_NEWAsync(Company, Category, Key, null);
        }
        
        /// <remarks/>
        public void GetDrawingList_NEWAsync(string Company, string Category, string Key, object userState) {
            if ((this.GetDrawingList_NEWOperationCompleted == null)) {
                this.GetDrawingList_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingList_NEWOperationCompleted);
            }
            this.InvokeAsync("GetDrawingList_NEW", new object[] {
                        Company,
                        Category,
                        Key}, this.GetDrawingList_NEWOperationCompleted, userState);
        }
        
        private void OnGetDrawingList_NEWOperationCompleted(object arg) {
            if ((this.GetDrawingList_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingList_NEWCompleted(this, new GetDrawingList_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Select(string TSQL, string Key) {
            object[] results = this.Invoke("Select", new object[] {
                        TSQL,
                        Key});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAsync(string TSQL, string Key) {
            this.SelectAsync(TSQL, Key, null);
        }
        
        /// <remarks/>
        public void SelectAsync(string TSQL, string Key, object userState) {
            if ((this.SelectOperationCompleted == null)) {
                this.SelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOperationCompleted);
            }
            this.InvokeAsync("Select", new object[] {
                        TSQL,
                        Key}, this.SelectOperationCompleted, userState);
        }
        
        private void OnSelectOperationCompleted(object arg) {
            if ((this.SelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCompleted(this, new SelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Execute(string TSQL, string Key) {
            object[] results = this.Invoke("Execute", new object[] {
                        TSQL,
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(string TSQL, string Key) {
            this.ExecuteAsync(TSQL, Key, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(string TSQL, string Key, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        TSQL,
                        Key}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion(string Key) {
            object[] results = this.Invoke("GetVersion", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync(string Key) {
            this.GetVersionAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(string Key, object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[] {
                        Key}, this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateFiles(int FirstFile, int LastFile, string Key) {
            object[] results = this.Invoke("UpdateFiles", new object[] {
                        FirstFile,
                        LastFile,
                        Key});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFilesAsync(int FirstFile, int LastFile, string Key) {
            this.UpdateFilesAsync(FirstFile, LastFile, Key, null);
        }
        
        /// <remarks/>
        public void UpdateFilesAsync(int FirstFile, int LastFile, string Key, object userState) {
            if ((this.UpdateFilesOperationCompleted == null)) {
                this.UpdateFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFilesOperationCompleted);
            }
            this.InvokeAsync("UpdateFiles", new object[] {
                        FirstFile,
                        LastFile,
                        Key}, this.UpdateFilesOperationCompleted, userState);
        }
        
        private void OnUpdateFilesOperationCompleted(object arg) {
            if ((this.UpdateFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFilesCompleted(this, new UpdateFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompressTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CompressTable(string TSQL, string Key) {
            object[] results = this.Invoke("CompressTable", new object[] {
                        TSQL,
                        Key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CompressTableAsync(string TSQL, string Key) {
            this.CompressTableAsync(TSQL, Key, null);
        }
        
        /// <remarks/>
        public void CompressTableAsync(string TSQL, string Key, object userState) {
            if ((this.CompressTableOperationCompleted == null)) {
                this.CompressTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompressTableOperationCompleted);
            }
            this.InvokeAsync("CompressTable", new object[] {
                        TSQL,
                        Key}, this.CompressTableOperationCompleted, userState);
        }
        
        private void OnCompressTableOperationCompleted(object arg) {
            if ((this.CompressTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompressTableCompleted(this, new CompressTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWanIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWanIP() {
            object[] results = this.Invoke("GetWanIP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWanIPAsync() {
            this.GetWanIPAsync(null);
        }
        
        /// <remarks/>
        public void GetWanIPAsync(object userState) {
            if ((this.GetWanIPOperationCompleted == null)) {
                this.GetWanIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWanIPOperationCompleted);
            }
            this.InvokeAsync("GetWanIP", new object[0], this.GetWanIPOperationCompleted, userState);
        }
        
        private void OnGetWanIPOperationCompleted(object arg) {
            if ((this.GetWanIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWanIPCompleted(this, new GetWanIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtainSessionID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtainSessionID() {
            object[] results = this.Invoke("ObtainSessionID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObtainSessionIDAsync() {
            this.ObtainSessionIDAsync(null);
        }
        
        /// <remarks/>
        public void ObtainSessionIDAsync(object userState) {
            if ((this.ObtainSessionIDOperationCompleted == null)) {
                this.ObtainSessionIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtainSessionIDOperationCompleted);
            }
            this.InvokeAsync("ObtainSessionID", new object[0], this.ObtainSessionIDOperationCompleted, userState);
        }
        
        private void OnObtainSessionIDOperationCompleted(object arg) {
            if ((this.ObtainSessionIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtainSessionIDCompleted(this, new ObtainSessionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSoundRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundRating(string FilenameWithExtention, string Key) {
            object[] results = this.Invoke("GetSoundRating", new object[] {
                        FilenameWithExtention,
                        Key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSoundRatingAsync(string FilenameWithExtention, string Key) {
            this.GetSoundRatingAsync(FilenameWithExtention, Key, null);
        }
        
        /// <remarks/>
        public void GetSoundRatingAsync(string FilenameWithExtention, string Key, object userState) {
            if ((this.GetSoundRatingOperationCompleted == null)) {
                this.GetSoundRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSoundRatingOperationCompleted);
            }
            this.InvokeAsync("GetSoundRating", new object[] {
                        FilenameWithExtention,
                        Key}, this.GetSoundRatingOperationCompleted, userState);
        }
        
        private void OnGetSoundRatingOperationCompleted(object arg) {
            if ((this.GetSoundRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSoundRatingCompleted(this, new GetSoundRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSoundRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSoundRating([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bFile, string FilenameWithExtention, string Key) {
            object[] results = this.Invoke("SendSoundRating", new object[] {
                        bFile,
                        FilenameWithExtention,
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSoundRatingAsync(byte[] bFile, string FilenameWithExtention, string Key) {
            this.SendSoundRatingAsync(bFile, FilenameWithExtention, Key, null);
        }
        
        /// <remarks/>
        public void SendSoundRatingAsync(byte[] bFile, string FilenameWithExtention, string Key, object userState) {
            if ((this.SendSoundRatingOperationCompleted == null)) {
                this.SendSoundRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSoundRatingOperationCompleted);
            }
            this.InvokeAsync("SendSoundRating", new object[] {
                        bFile,
                        FilenameWithExtention,
                        Key}, this.SendSoundRatingOperationCompleted, userState);
        }
        
        private void OnSendSoundRatingOperationCompleted(object arg) {
            if ((this.SendSoundRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSoundRatingCompleted(this, new SendSoundRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPublicityCompletedEventHandler(object sender, GetPublicityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPublicityCompletedEventHandler(object sender, SendPublicityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPublicityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPublicityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPublicityListCompletedEventHandler(object sender, GetPublicityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDrawingCompletedEventHandler(object sender, GetDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDrawing_NEWCompletedEventHandler(object sender, GetDrawing_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawing_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawing_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCategoryCompletedEventHandler(object sender, GetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendDrawingCompletedEventHandler(object sender, SendDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendDrawing_NEWCompletedEventHandler(object sender, SendDrawing_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDrawing_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDrawing_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDrawingListCompletedEventHandler(object sender, GetDrawingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDrawingList_NEWCompletedEventHandler(object sender, GetDrawingList_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingList_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingList_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectCompletedEventHandler(object sender, SelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFilesCompletedEventHandler(object sender, UpdateFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CompressTableCompletedEventHandler(object sender, CompressTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompressTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWanIPCompletedEventHandler(object sender, GetWanIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWanIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWanIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ObtainSessionIDCompletedEventHandler(object sender, ObtainSessionIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtainSessionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtainSessionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSoundRatingCompletedEventHandler(object sender, GetSoundRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSoundRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSoundRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSoundRatingCompletedEventHandler(object sender, SendSoundRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSoundRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSoundRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591